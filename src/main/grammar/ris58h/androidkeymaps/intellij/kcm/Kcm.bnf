{
  parserClass="ris58h.androidkeymaps.intellij.kcm.parser.KcmParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
  extends(".*_entry")=entry

  psiClassPrefix="Kcm"
  psiImplClassSuffix="Impl"
  psiPackage="ris58h.androidkeymaps.intellij.kcm.psi"
  psiImplPackage="ris58h.androidkeymaps.intellij.kcm.psi.impl"

  elementTypeHolderClass="ris58h.androidkeymaps.intellij.kcm.psi.KcmTypes"
  elementTypeClass="ris58h.androidkeymaps.intellij.kcm.psi.KcmElementType"
  tokenTypeClass="ris58h.androidkeymaps.intellij.kcm.psi.KcmTokenType"
}

kcmFile ::= item*

private item ::= COMMENT|entry
entry ::= type_entry|map_entry|key_entry
private recovery_entry ::= !(TYPE_KEYWORD|MAP_KEYWORD|KEY_KEYWORD)

type_entry ::= TYPE_KEYWORD LABEL {
    pin=1
    recoverWhile="recovery_entry"
}

map_entry ::= MAP_KEYWORD KEY_KEYWORD USAGE_KEYWORD? NUMBER (LABEL|NUMBER) {
    pin=1
    recoverWhile="recovery_entry"
    implements="ris58h.androidkeymaps.intellij.kcm.psi.KcmMapEntryMixin"
}

key_entry ::= KEY_KEYWORD (LABEL|NUMBER) key_properties_block {
    pin=1
    recoverWhile="recovery_entry"
    implements="ris58h.androidkeymaps.intellij.kcm.psi.KcmKeyEntryMixin"
}
key_properties_block ::= LBRACE key_property* RBRACE
key_property ::= key_property_keys SEMICOLON key_property_values
key_property_keys ::= key_property_key (COMMA key_property_key)*
key_property_key ::= PROPERTY_KEY
private key_property_values ::= key_property_value*
private key_property_value ::= CHARACTER_LITERAL|NONE_KEYWORD
                         | (FALLBACK_KEYWORD LABEL|NUMBER)
                         | (REPLACE_KEYWORD LABEL|NUMBER)