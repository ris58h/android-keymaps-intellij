{
  parserClass="ris58h.androidkeymaps.intellij.kl.parser.KlParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Kl"
  psiImplClassSuffix="Impl"
  psiPackage="ris58h.androidkeymaps.intellij.kl.psi"
  psiImplPackage="ris58h.androidkeymaps.intellij.kl.psi.impl"

  elementTypeHolderClass="ris58h.androidkeymaps.intellij.kl.psi.KlTypes"
  elementTypeClass="ris58h.androidkeymaps.intellij.kl.psi.KlElementType"
  tokenTypeClass="ris58h.androidkeymaps.intellij.kl.psi.KlTokenType"
}

klFile ::= item*

private item ::= COMMENT|entry
private entry ::= key_entry|axis_entry|led_entry|sensor_entry|rkc_entry
private recovery_entry ::= !(KEY_KEYWORD|AXIS_KEYWORD|LED_KEYWORD|SENSOR_KEYWORD|RKC_KEYWORD)

key_entry ::= KEY_KEYWORD USAGE_KEYWORD? NUMBER LABEL key_flags? {
   pin=1
   recoverWhile="recovery_entry"
   implements="ris58h.androidkeymaps.intellij.kl.psi.UsageEntry"
}
private key_flags ::= LABEL+

axis_entry ::= AXIS_KEYWORD NUMBER (LABEL|axis_split|axis_invert) axis_flat? {
    pin=1
    recoverWhile="recovery_entry"
}
private axis_split ::= SPLIT_KEYWORD NUMBER LABEL LABEL
private axis_invert ::= INVERT_KEYWORD LABEL
private axis_flat ::= FLAT_KEYWORD NUMBER

led_entry ::= LED_KEYWORD USAGE_KEYWORD? NUMBER LABEL {
    pin=1
    recoverWhile="recovery_entry"
    implements="ris58h.androidkeymaps.intellij.kl.psi.UsageEntry"
}

sensor_entry ::= SENSOR_KEYWORD NUMBER LABEL LABEL {
    pin=1
    recoverWhile="recovery_entry"
}

rkc_entry ::= RKC_KEYWORD LABEL {
    pin=1
    recoverWhile="recovery_entry"
}
